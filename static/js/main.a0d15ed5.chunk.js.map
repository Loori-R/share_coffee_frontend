{"version":3,"sources":["components/Header/styles.module.scss","components/PageTitle/styles.module.scss","components/Footer/styles.module.scss","components/SectionMain/styles.module.scss","components/Header/logo-coffee.png","components/SectionInfo/styles.module.scss","components/Button/styles.module.scss","components/Header/index.jsx","components/PageTitle/index.jsx","components/Footer/index.jsx","components/SectionInfo/index.jsx","components/TelegramLoginButton/index.jsx","components/SectionMain/index.jsx","pages/LoginPage/index.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","header","logo_header","wrapper","main","main__header","main__description","footer","footer__title","section","section__center","__webpack_require__","p","section__info","section__btn","Header","react_default","a","createElement","className","concat","styles","src","logo","alt","Component","PageTitle","_this$props","this","props","title","desc","Footer","SectionInfo","infoText","TelegramLoginButton","botName","buttonSize","cornerRadius","requestAccess","usePic","dataOnauth","console","log","window","TelegramLoginWidget","user","script","document","setAttribute","undefined","async","instance","appendChild","_this","ref","component","children","defaultProps","SectionMain","components_SectionInfo","id","TelegramLoginButton_TelegramLoginButton","response","fetch","method","mode","body","cache","then","r","json","data","LoginPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","userTelegramId","_this2","localStorage","getItem","requestUrl","blob","setState","components_Header","components_PageTitle","username","components_SectionMain","components_Footer","telegramId","locationHash","location","search","slice","split","map","s","filter","v","setItem","App","react_router_dom","react_router","path","exact","Boolean","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0d15ed5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__2MS7e\",\"logo_header\":\"styles_logo_header__3OfrK\",\"wrapper\":\"styles_wrapper__1phSz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3BnTm\",\"main__header\":\"styles_main__header__3Ulln\",\"main__description\":\"styles_main__description__2bc_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer__1yssL\",\"footer__title\":\"styles_footer__title__1sbTW\",\"wrapper\":\"styles_wrapper__3dmUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"styles_section__2vSrR\",\"section__center\":\"styles_section__center__2Ob1Y\",\"wrapper\":\"styles_wrapper__3SWp2\"};","module.exports = __webpack_public_path__ + \"static/media/logo-coffee.195010f7.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__info\":\"styles_section__info__tGxdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__btn\":\"styles_section__btn__1taFN\"};","import React, { Component } from \"react\";\r\nimport logo from \"./logo-coffee.png\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`${styles.wrapper} ${styles.header}`}>\r\n        <img src={logo} className={styles.logo_header} alt=\"coffee\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nclass PageTitle extends Component {\r\n  render() {\r\n    const { title, desc } = this.props;\r\n    return (\r\n      <div className={styles.main}>\r\n        <h1 className={styles.main__header}>{title}</h1>\r\n        <p className={styles.main__description}>{desc}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageTitle;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className={`${styles.wrapper} ${styles.footer}`}>\r\n        <span className={styles.footer__title}>Â© 2019 Wargaming.net</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nclass SectionInfo extends Component {\r\n  render() {\r\n    const { infoText } = this.props;\r\n\r\n    return (\r\n      <div className={styles.section__info}>\r\n        <span>{infoText}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionInfo;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport default class TelegramLoginButton extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      botName,\r\n      buttonSize,\r\n      cornerRadius,\r\n      requestAccess,\r\n      usePic,\r\n      dataOnauth,\r\n    } = this.props;\r\n    console.log(this.props);\r\n    window.TelegramLoginWidget = {\r\n      dataOnauth: user => dataOnauth(user),\r\n    };\r\n\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://telegram.org/js/telegram-widget.js?4\";\r\n    script.setAttribute(\"data-telegram-login\", botName);\r\n    script.setAttribute(\"data-size\", buttonSize);\r\n    if (cornerRadius !== undefined) {\r\n      script.setAttribute(\"data-radius\", cornerRadius);\r\n    }\r\n    script.setAttribute(\"data-request-access\", requestAccess);\r\n    script.setAttribute(\"data-userpic\", usePic);\r\n    script.setAttribute(\"data-onauth\", \"TelegramLoginWidget.dataOnauth(user)\");\r\n    script.async = true;\r\n    this.instance.appendChild(script);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        ref={component => {\r\n          this.instance = component;\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTelegramLoginButton.propTypes = {\r\n  botName: PropTypes.string.isRequired,\r\n  dataOnauth: PropTypes.func,\r\n  buttonSize: PropTypes.oneOf([\"large\", \"medium\", \"small\"]),\r\n  cornerRadius: PropTypes.number,\r\n  requestAccess: PropTypes.string,\r\n  usePic: PropTypes.bool,\r\n};\r\n\r\nTelegramLoginButton.defaultProps = {\r\n  botName: \"samplebot\",\r\n  dataOnauth: () => undefined,\r\n  buttonSize: \"large\",\r\n  requestAccess: \"write\",\r\n  usePic: true,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./styles.module.scss\";\r\nimport SectionInfo from \"../SectionInfo\";\r\nimport Button from \"../Button\";\r\nimport TelegramLoginButton from \"../TelegramLoginButton\";\r\n\r\nclass SectionMain extends Component {\r\n  render() {\r\n    const handleTelegramResponse = response => {\r\n      const myInit = {\r\n        method: \"PUT\",\r\n        mode: \"cors\",\r\n        body: { user: response },\r\n        cache: \"default\",\r\n      };\r\n\r\n      fetch(\r\n        \"https://forge-development.herokuapp.com/auth/telegram/callback\",\r\n        myInit,\r\n      )\r\n        .then(r => r.json())\r\n        .then(data => {\r\n          console.log(data);\r\n        });\r\n    };\r\n\r\n    return (\r\n      <div className={`${styles.wrapper} ${styles.section__center}`}>\r\n        <SectionInfo infoText=\"Use Telegram to be aware of upcoming meets and manage subscriptions:\" />\r\n        <div id=\"telegram-login\" className={styles.section}>\r\n          {/*Ð¢ÐµÑÑÐ¸Ð» ÐºÐ½Ð¾Ð¿ÐºÑ Ð¡Ð°Ð½Ð¸, ÐµÑÐ»Ð¸ ÑÐµ ÑÐ»Ð¾Ð¼Ð°Ð», Ð¸Ð·Ð²Ð¸Ð½ÑÐ¹ÑÐµ, Ð½Ðµ ÑÐ¾ÑÐµÐ»*/}\r\n          <TelegramLoginButton\r\n            dataOnauth={handleTelegramResponse}\r\n            botName=\"RandomCofeeBot\"\r\n          />\r\n          {/*<Button*/}\r\n          {/*text=\"Log in via Telegram\"*/}\r\n          {/*/>*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionMain;\r\n","import React, {Component} from \"react\";\r\nimport Header from \"./../../components/Header\";\r\nimport PageTitle from \"./../../components/PageTitle\";\r\nimport Footer from \"./../../components/Footer\";\r\n// import EventDesc from \"./../../components/EventDesc\";\r\nimport SectionMain from \"./../../components/SectionMain\";\r\n\r\nexport default class LoginPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // events: [\r\n      //     {\r\n      //         eventName: \"Platform Front-end\",\r\n      //         adress: \"@ Latte Pytho 12 Zybitskaya St., Minsk\",\r\n      //         eventFrequency: \"every Monday, 16:00\",\r\n      //         subscribe: \"Subscribe\",\r\n      //         key: 1,\r\n      //     },\r\n      //     {\r\n      //         eventName: \"Platform Back-end\",\r\n      //         adress: \"@ Latte Pytho 12 Zybitskaya St., Minsk\",\r\n      //         eventFrequency: \"every Monday, 16:00\",\r\n      //         subscribe: \"Subscribe\",\r\n      //         key: 2,\r\n      //     },\r\n      //     {\r\n      //         eventName: \"Something event\",\r\n      //         adress: \"Something adress\",\r\n      //         eventFrequency: \"hz vasche\",\r\n      //         subscribe: \"Unsubscribe\",\r\n      //         key: 3,\r\n      //     },\r\n      // ],\r\n      \r\n      userTelegramId: undefined,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // const { events } = this.state;\r\n    // console.log(localStorage.telegramId)\r\n    console.log(\"id = \" + this.state.userTelegramId);\r\n\r\n    if (!!localStorage.getItem(\"telegramId\") && !this.state.user) {\r\n      const requestUrl =\r\n        \"https://forge-development.herokuapp.com/api/users/\" +\r\n        localStorage.getItem(\"telegramId\");\r\n\r\n      fetch(requestUrl)\r\n        .then(blob => blob.json())\r\n        .then(user => {\r\n          console.log(user);\r\n\r\n          this.setState({user});\r\n        });\r\n    }\r\n\r\n    // const PageTittle = () => {\r\n    //     console.log(\"dot\", this.state.userTelegramId)\r\n    //     return (\r\n    //       this.state.user ? (\r\n    //         <PageTitle title={\"Hello, \" + this.state.user.username} desc=\"feel free at this website\" />\r\n    //       ) : (\r\n    //         <PageTitle title=\"Get your own kick off\" desc=\"with Wargaming S&C\" />\r\n    //       )\r\n    //     );\r\n    //   };\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        {this.state.user ? (\r\n          <PageTitle\r\n            title={\"Hello, \" + this.state.user.username}\r\n            desc=\"feel free at this website\"\r\n          />\r\n        ) : (\r\n          <PageTitle title=\"Get your own kick off\" desc=\"with Wargaming S&C\"/>\r\n        )}\r\n        <SectionMain/>\r\n        {/* <EventDesc events={events} /> */}\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const telegramId = localStorage.getItem(\"telegramId\");\r\n\r\n    if (!telegramId) {\r\n      const locationHash = !!this.props.location.search\r\n        ? this.props.location.search\r\n          .slice(1)\r\n          .split(\"&\")\r\n          .map(s => s.split(\"=\"))\r\n          .filter(v => v[0] === \"id\")[0][1]\r\n        : undefined;\r\n      console.log(\"lh\", locationHash);\r\n      console.log(\"props\", this.props);\r\n      console.log(\"Locsearch\", this.props.location.search);\r\n      localStorage.setItem(\"telegramId\", locationHash);\r\n      this.setState({\r\n        userTelegramId: localStorage.getItem(\"telegramId\"),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        userTelegramId: telegramId,\r\n      });\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./App.module.scss\";\r\nimport LoginPage from \"../pages/LoginPage\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.App}>\r\n        <Router>\r\n          <Route path=\"/\" component={LoginPage} exact />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\",\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}